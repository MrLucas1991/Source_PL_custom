{{!< default}}

<main class="gh-main gh-outer">
<style>
  .gh-account-header { margin-left: 0; text-align: center; }
  .gh-account-box { max-width: 720px; margin: 3rem auto; padding: 2rem; border: 1px solid #eaeaea; border-radius: 12px; background: transparent; }
  .gh-account-table { width: 100%; margin-bottom: 2rem; }
  .gh-account-input { width: 100%; margin-bottom: 1.5rem; padding: 1.25rem 1.5rem; font-size: 1.2rem; border: 1px solid #ccc; border-radius: 999px; background: #fff; }
  .gh-button, .gh-button-secondary, .gh-button-outline, .gh-danger-button {
    display: inline-block; font-size: 1.2rem; padding: 1rem 2.5rem;
    border-radius: 999px; border: none; cursor: pointer;
    text-align: center; line-height: 1.2; margin: 0 auto 1.2rem;
  }
  .gh-button-outline { border: 2px solid #000; background: transparent; color: #000; }
  .gh-button-secondary { background: #a55; color: #fff; }
  .gh-feedback { margin-top: 1rem; font-size: 1rem; text-align: center; }
  .gh-avatar-img { height: 80px; border-radius: 8px; }
  .gh-edit-form, .gh-cancel-wrapper, .gh-delete-wrapper { max-height: 0; overflow: hidden; transition: max-height 0.5s ease; }
  .gh-edit-form.active, .gh-cancel-wrapper.active, .gh-delete-wrapper.active { max-height: 600px; margin-top: 1.5rem; }
  .gh-warning { color: #c00; font-weight: bold; text-align: center; margin-bottom: 1rem; font-size: 1.1rem; }
  .gh-danger-button { background: #c00; color: #fff; font-size: 1.2rem; padding: 1rem 2.5rem; border-radius: 999px; border: none; display: block; margin: 0 auto; }
</style>

<header class="gh-article-header gh-account-header">
  <h1 class="gh-article-title is-title">Moje konto</h1>
  <p class="gh-article-excerpt is-body">Zarządzaj swoimi danymi i subskrypcją</p>
</header>

<section class="gh-content gh-canvas is-body">
  {{#if @member}}
  <div class="gh-account-box">
    <h2>Dane konta</h2>
    <table class="gh-account-table">
      <tr><th>Imię</th><td data-field="name">{{@member.name}}</td></tr>
      <tr><th>Email</th><td data-field="email">{{@member.email}}</td></tr>
      <tr><th>Avatar</th><td><img class="gh-avatar-img" src="https://www.gravatar.com/avatar/{{@member.email}}?d=mp&s=100" alt="Avatar"></td></tr>
      <tr><th>Status subskrypcji</th><td data-field="status">{{#if @member.paid}}<strong>Aktywna</strong>{{else}}Brak aktywnej subskrypcji{{/if}}</td></tr>
    </table>

    {{#if @member.paid}}
    <h3 style="margin-top: 2rem;">Szczegóły subskrypcji</h3>
    <table class="gh-account-table">
      {{#if @member.subscriptions.[0]}}
        <tr><th>Plan</th><td>{{@member.subscriptions.[0].plan.nickname}}</td></tr>
        <tr><th>Status</th><td>{{@member.subscriptions.[0].status}}</td></tr>
        <tr><th>Start</th><td>{{date @member.subscriptions.[0].start_date format="DD-MM-YYYY"}}</td></tr>
        <tr><th>Koniec</th><td>{{date @member.subscriptions.[0].current_period_end format="DD-MM-YYYY"}}</td></tr>
      {{/if}}
    </table>
    {{/if}}

    <div style="text-align:center; margin-bottom: 2rem;">
      <button id="toggle-edit" class="gh-button gh-button-outline">Edytuj dane</button>
    </div>

    <div class="gh-edit-form" id="edit-form-wrapper">
      <form id="profile-update-form">
        <input type="text" id="name" name="name" class="gh-account-input" value="{{@member.name}}" placeholder="Imię">
        <input type="email" id="email" name="email" class="gh-account-input" value="{{@member.email}}" placeholder="Twój e-mail">
        <input type="hidden" name="original_email" value="{{@member.email}}">
        <input type="hidden" name="member_uuid" value="{{@member.uuid}}">
        <button type="submit" class="gh-button">Zapisz zmiany</button>
        <p id="update-feedback" class="gh-feedback"></p>
      </form>
    </div>

    {{#if @member.paid}}
    <hr>
    <div style="text-align:center; margin-top: 2rem;">
      <button id="toggle-cancel-sub" class="gh-button gh-button-outline">Anuluj subskrypcję</button>
    </div>
    <div class="gh-cancel-wrapper" id="cancel-sub-wrapper">
      <p class="gh-warning">Czy na pewno chcesz anulować subskrypcję?</p>
      <form id="cancel-sub-form">
        <input type="hidden" name="cancel" value="true">
        <input type="hidden" name="email" value="{{@member.email}}">
        <input type="hidden" name="member_uuid" value="{{@member.uuid}}">
        <button type="submit" class="gh-danger-button">Tak, anuluj</button>
      </form>
    </div>
    {{/if}}

    <hr>
    <div style="text-align:center; margin-top: 2rem;">
      <button id="toggle-delete" class="gh-button gh-button-outline">Usuń konto</button>
    </div>
    <div class="gh-delete-wrapper" id="delete-wrapper">
      <p class="gh-warning">Czy jesteś pewien, że chcesz usunąć konto? Tego działania nie można cofnąć.</p>
      <form id="delete-form">
        <input type="hidden" name="delete" value="true">
        <input type="hidden" name="email" value="{{@member.email}}">
        <input type="hidden" name="member_uuid" value="{{@member.uuid}}">
        <button type="submit" class="gh-danger-button">Tak, usuń konto</button>
      </form>
    </div>

    <hr>
    <div style="text-align: center; margin-top: 2rem;">
      <button class="gh-button gh-button-secondary" data-members-signout>Wyloguj się</button>
    </div>
  </div>
  {{else}}
  <p style="text-align: center;">Nie jesteś zalogowany. <a href="/login/">Zaloguj się</a> lub <a href="/signup/">Zarejestruj się</a>.</p>
  {{/if}}
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const editToggle = document.getElementById("toggle-edit");
    const formWrapper = document.getElementById("edit-form-wrapper");
    const form = document.getElementById("profile-update-form");
    const feedback = document.getElementById("update-feedback");

    const cancelToggle = document.getElementById("toggle-cancel-sub");
    const cancelWrapper = document.getElementById("cancel-sub-wrapper");
    const cancelForm = document.getElementById("cancel-sub-form");

    const deleteToggle = document.getElementById("toggle-delete");
    const deleteWrapper = document.getElementById("delete-wrapper");
    const deleteForm = document.getElementById("delete-form");

    if (editToggle && formWrapper) {
      editToggle.addEventListener("click", () => {
        formWrapper.classList.toggle("active");
      });
    }

    if (cancelToggle && cancelWrapper) {
      cancelToggle.addEventListener("click", () => {
        cancelWrapper.classList.toggle("active");
      });
    }

    if (deleteToggle && deleteWrapper) {
      deleteToggle.addEventListener("click", () => {
        deleteWrapper.classList.toggle("active");
      });
    }

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        document.querySelector("td[data-field='name']").innerText = form.name.value;
        document.querySelector("td[data-field='email']").innerText = form.email.value;
        feedback.textContent = "⏳ Aktualizacja...";
        try {
          const response = await fetch("https://n8n.votum.network/webhook-test/d3655125-6c9a-4353-87b5-f78001bc0414", {
            method: "POST",
            body: formData
          });
          let result;
          try { result = await response.json(); } catch { result = { success: true }; }
          feedback.textContent = result.message || "✅ Dane zaktualizowane.";
          formWrapper.classList.remove("active");
        } catch {
          feedback.textContent = "⚠️ Aktualizacja może nie powieść się.";
        }
      });
    }

    if (cancelForm) {
      cancelForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(cancelForm);
        try {
          const response = await fetch("https://n8n.votum.network/webhook-test/d3655125-6c9a-4353-87b5-f78001bc0414", {
            method: "POST",
            body: formData
          });
          let result;
          try { result = await response.json(); } catch { result = { success: true }; }
          document.querySelector("td[data-field='status']").textContent = "Brak aktywnej subskrypcji";
          cancelWrapper.classList.remove("active");
          cancelWrapper.innerHTML = "";
          const newBtn = document.createElement("a");
          newBtn.href = "/subskrypcja";
          newBtn.className = "gh-button gh-button-outline";
          newBtn.textContent = "Zostań subskrybentem";
          cancelToggle.replaceWith(newBtn);
        } catch {
          // brak alertu – tylko fallback
        }
      });
    }

    if (deleteForm) {
  deleteForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(deleteForm);
    try {
      const response = await fetch("https://n8n.votum.network/webhook-test/d3655125-6c9a-4353-87b5-f78001bc0414", {
        method: "POST",
        body: formData
      });

      let result;
      try { result = await response.json(); } catch { result = { success: true }; }

      if (response.ok && result.success !== false) {
        await ghost.members.api.member.delete();
        await ghost.members.signout();
        window.location.href = "/";
      } else {
        alert(result.message || "⚠️ Usunięcie konta nie powiodło się.");
      }

    } catch {
      alert("❌ Błąd połączenia z serwerem podczas usuwania konta.");
    }
  });
}

  });
</script>
</main>
