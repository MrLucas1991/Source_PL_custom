<!DOCTYPE html>
<html lang="{{@site.locale}}">
<head>

    {{^if @member}}
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8181982052718057"
     crossorigin="anonymous"></script>
{{/if}}

    
    <title>{{meta_title}}</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preload" as="style" href="{{asset "built/screen.css"}}">
    <link rel="preload" as="script" href="{{asset "built/source.js"}}">
    {{> "typography/fonts"}}
    <link rel="stylesheet" type="text/css" href="{{asset "built/screen.css"}}">
    <style>
        :root {
            --background-color: {{@custom.site_background_color}}
        }
    </style>
    <script>
        var accentColor = getComputedStyle(document.documentElement).getPropertyValue('--background-color').trim().slice(1);
        if (accentColor.length === 3) accentColor = accentColor.split('').map(c => c + c).join('');
        var r = parseInt(accentColor.substr(0, 2), 16),
            g = parseInt(accentColor.substr(2, 2), 16),
            b = parseInt(accentColor.substr(4, 2), 16),
            yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000,
            textColor = (yiq >= 128) ? 'dark' : 'light';
        document.documentElement.className = `has-${textColor}-text`;
    </script>
    {{ghost_head}}
    <script defer src="{{@site.url}}/members.js"></script>
    <script defer src="https://cdn.jsdelivr.net/ghost/portal@latest/umd/portal.min.js"></script>

</head>
<body class="{{body_class}} has-{{#match @custom.title_font "Elegant serif"}}serif{{else match @custom.title_font "Consistent mono"}}mono{{else}}sans{{/match}}-title has-{{#match @custom.body_font "Elegant serif"}}serif{{else}}sans{{/match}}-body">
<div class="gh-viewport">
    {{> "components/navigation" navigationLayout=@custom.navigation_layout}}
    {{{body}}}
    {{> "components/footer"}}
</div>

{{#is "post, page"}}
    {{> "lightbox"}}
{{/is}}

<script src="{{asset "built/source.js"}}"></script>
{{ghost_foot}}

{{^if @member.paid}}
<script>
document.addEventListener("DOMContentLoaded", function () {
  const contentContainer = document.getElementById("dynamic-content");
  const rawContentElement = document.getElementById("raw-content");

  if (!contentContainer || !rawContentElement) return;

  const rawHTML = rawContentElement.innerHTML;
  const adCode = `
    <div class="adsense-block">
      <ins class="adsbygoogle"
           style="display:block"
           data-ad-client="ca-pub-8181982052718057"
           data-ad-slot="2525872787"
           data-ad-format="auto"
           data-full-width-responsive="true"></ins>
    </div>`;

  const subscribeBox = `
    <div class="subscribe-cta-box">
      <h2>Pokonaj algorytmy i dołącz do Subskrybentów!<br><span>Jednocześnie wspieraj moją pracę.</span></h2>
      <ul>
        <li>Dostęp do wszystkich artykułów</li>
        <li>Czytaj wygodnie! Nawigacyjny spis treści</li>
        <li>Artykuły na Twoją skrzynkę e-mail</li>
      </ul>
      <a class="subscribe-cta-button" href="/subskrypcja">Zostań subskrybentem</a>
      <div class="subscribe-cta-login">Masz już konto? <a href="/login">Zaloguj się</a></div>
    </div>`;

  const tempDiv = document.createElement("div");
  tempDiv.innerHTML = rawHTML;

  const paragraphs = tempDiv.querySelectorAll("p");
  paragraphs.forEach((p, i) => {
    const mod3 = (i + 1) % 3 === 0;
    const mod6 = (i + 1) % 6 === 0;
    const prev = p.previousElementSibling;

    if (mod6 && (!prev || !prev.classList.contains("adsense-block"))) {
      const box = document.createElement("div");
      box.innerHTML = subscribeBox;
      p.parentNode.insertBefore(box, p.nextSibling);
    } else if (mod3) {
      const ad = document.createElement("div");
      ad.innerHTML = adCode;
      p.parentNode.insertBefore(ad, p.nextSibling);
    }
  });

  contentContainer.innerHTML = tempDiv.innerHTML;

  const ads = document.querySelectorAll('.adsbygoogle');
  if (ads.length > 0 && !window.adsbygoogleInitialized) {
    const script = document.createElement('script');
    script.async = true;
    script.src = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8181982052718057";
    script.crossOrigin = "anonymous";
    document.head.appendChild(script);

    script.onload = () => {
      window.adsbygoogleInitialized = true;
      ads.forEach(ad => {
        try {
          (adsbygoogle = window.adsbygoogle || []).push({});
        } catch (e) {
          console.error('AdSense error:', e);
        }
      });
    };
  }
});
</script>
{{/if}}


   {{#if @member.paid}}
<script>
document.addEventListener("DOMContentLoaded", function () {
  const body = document.body;

  // === Desktop toggle button ===
  const desktopToggle = document.createElement("div");
  desktopToggle.className = "toc-toggle-desktop";
  desktopToggle.textContent = "Spis treści";
  desktopToggle.addEventListener("click", () => {
    body.classList.toggle("toc-open");
  });
  document.body.appendChild(desktopToggle);

  // === Mobile toggle button ===
  const mobileToggle = document.createElement("div");
  mobileToggle.className = "toc-toggle-mobile";
  mobileToggle.textContent = "Spis treści";
  mobileToggle.addEventListener("click", () => {
    body.classList.toggle("toc-open");
  });
  document.body.appendChild(mobileToggle);

  // === Find content + ToC container ===
  const content = document.querySelector(".gh-content, .gh-content-with-toc");
  const tocContainer = document.querySelector(".gh-toc");

  if (!content || !tocContainer) return;

  const headings = content.querySelectorAll("h2, h3");
  if (!headings.length) return;

  const ul = document.createElement("ul");

  // === Add link to top of article
  const titleLi = document.createElement("li");
  const titleA = document.createElement("a");
  titleA.href = "#top";
  titleA.textContent = "Początek artykułu";
  titleLi.appendChild(titleA);
  ul.appendChild(titleLi);

  // === Add headings to ToC, skipping certain ones
  headings.forEach((heading, i) => {
    const text = heading.textContent.trim();

    if (text.toLowerCase().includes("dołącz do dyskusji")) return;

    const id = `toc-${i}`;
    heading.id = id;

    const li = document.createElement("li");
    li.className = heading.tagName.toLowerCase();

    const a = document.createElement("a");
    a.href = `#${id}`;
    a.textContent = text;

    li.appendChild(a);
    ul.appendChild(li);
  });

  // === Add link to comments section
  const commentsLi = document.createElement("li");
  const commentsA = document.createElement("a");
  commentsA.href = "#komentarze";
  commentsA.textContent = "Sekcja komentarzy";
  commentsLi.appendChild(commentsA);
  ul.appendChild(commentsLi);

  tocContainer.appendChild(ul);

  // === Active section highlight ===
  const tocLinks = tocContainer.querySelectorAll("a");
  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const id = entry.target.id;
      if (entry.isIntersecting) {
        tocLinks.forEach(link => link.classList.remove("active"));
        const activeLink = tocContainer.querySelector(`a[href="#${id}"]`);
        if (activeLink) activeLink.classList.add("active");
      }
    });
  }, { rootMargin: "-40% 0px -50% 0px", threshold: 0 });

  headings.forEach(h => observer.observe(h));
});
</script>
{{/if}}




</body>
</html>
